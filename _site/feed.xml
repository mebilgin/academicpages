<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-07-29T15:51:21+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Muhammed Bilgin</title><subtitle>Research Scientist&lt;br/&gt; Machine Learning and NLP</subtitle><author><name>Muhammed Bilgin</name><email>mebilgin@mebilgin.com</email></author><entry><title type="html">Introduction JAX</title><link href="http://localhost:4000/posts/2022/11/introduction-jax/" rel="alternate" type="text/html" title="Introduction JAX" /><published>2022-11-30T00:00:00+03:00</published><updated>2022-11-30T00:00:00+03:00</updated><id>http://localhost:4000/posts/2022/11/introduction-jax</id><content type="html" xml:base="http://localhost:4000/posts/2022/11/introduction-jax/">&lt;!--redirect_to: /articles/2012-05-02-altchi-ipoxp --&gt;

&lt;!--


The content will be published on 10-11-2021.

## Introduction JAX
&lt;pre&gt;
intro intro intro intro
intro intro intro intro
intro intro intro intro
&lt;/pre&gt;

## There will be Introduction in here
&lt;pre&gt;
space space space space
space space space space
space space space space
&lt;/pre&gt;

```bash
@inproceedings{bilgin2017robot,
 author = {Bilgin, Muhammed and Ensari, Tolga},
 booktitle = {2017 Electric Electronics, Computer Science, Biomedical Engineerings Meeting (EBBT)},
 organization = {IEEE},
 pages = {1--7},
 title = {Robot localization with Monte Carlo method},
 year = {2017}
}
```

--&gt;</content><author><name>Muhammed Bilgin</name><email>mebilgin@mebilgin.com</email></author><category term="posts" /><category term="jax" /><category term="tensor" /><category term="tensorflow" /><category term="pytorch" /><summary type="html">Introduction JAX</summary></entry><entry><title type="html">Factorization and Decomposition</title><link href="http://localhost:4000/posts/2022/08/factor-decomp/" rel="alternate" type="text/html" title="Factorization and Decomposition" /><published>2022-08-20T00:00:00+03:00</published><updated>2022-08-20T00:00:00+03:00</updated><id>http://localhost:4000/posts/2022/08/factor-decomp</id><content type="html" xml:base="http://localhost:4000/posts/2022/08/factor-decomp/">&lt;!--
The content will be published on 20-08-2022.


--&gt;

&lt;!--

Over the past few years, our team has been working on a few interrelated research projects about the work of maintaining Free &amp; Open-Source Software (FOSS) projects. For more information about our project, read [this blog post](link) we wrote when we first received our research grant from the Ford &amp; Sloan Foundations. Our team is an interdisciplinary mix tackling these issues from qualitative and quantitative perspectives, and many of us have also been maintainers of various FOSS projects:

Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.


In this example we will be using [KaTeX](https://katex.org/)

- Create a partial under `/layouts/partials/math.html`
- Within this partial reference the [Auto-render Extension](https://katex.org/docs/autorender.html) or host these scripts locally.
- Include the partial in your templates like so:  

```bash



```

- To enable KaTex globally set the parameter `math` to `true` in a project's configuration
- To enable KaTex on a per page basis include the parameter `math: true` in content files

**Note:** Use the online reference of [Supported TeX Functions](https://katex.org/docs/supported.html)




--&gt;

&lt;!-- 

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css&quot; integrity=&quot;sha384-zB1R0rpPzHqg7Kpt0Aljp8JPLqbXI3bhnPWROx27a9N0Ll6ZP/+DiW/UqRcLbRjq&quot; crossorigin=&quot;anonymous&quot;&gt;
&lt;script defer src=&quot;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.js&quot; integrity=&quot;sha384-y23I5Q6l+B6vatafAwxRu/0oK/79VlbSz7Q9aiSZUvyWYIYsd+qj+o24G5ZU2zJz&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;
&lt;script defer src=&quot;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/auto-render.min.js&quot; integrity=&quot;sha384-kWPLUVMOks5AQFrykwIup5lo0m3iMkkHrD0uJ4H5cjeGihAutqP0yW0J6dpFiVkI&quot; crossorigin=&quot;anonymous&quot; onload=&quot;renderMathInElement(document.body);&quot;&gt;&lt;/script&gt;



### Examples


Inline math: \\(\varphi = \dfrac{1+\sqrt5}{2}= 1.6180339887…\\)

Block math:
$$
 \varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } } 
$$

KaTeX --&gt;</content><author><name>Muhammed Bilgin</name><email>mebilgin@mebilgin.com</email></author><category term="posts" /><category term="tensor" /><summary type="html">Links about our research</summary></entry><entry><title type="html">Tensors</title><link href="http://localhost:4000/posts/2022/06/tensors/" rel="alternate" type="text/html" title="Tensors" /><published>2022-06-30T00:00:00+03:00</published><updated>2022-06-30T00:00:00+03:00</updated><id>http://localhost:4000/posts/2022/06/tensors</id><content type="html" xml:base="http://localhost:4000/posts/2022/06/tensors/">&lt;!-- 
The content will be published on 30-06-2022.

--&gt;

&lt;!--
Over the past few years, our team has been working on a few interrelated research projects about the work of maintaining Free &amp; Open-Source Software (FOSS) projects. For more information about our project, read [this blog post](link) we wrote when we first received our research grant from the Ford &amp; Sloan Foundations. Our team is an interdisciplinary mix tackling these issues from qualitative and quantitative perspectives, and many of us have also been maintainers of various FOSS projects:

Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.


In this example we will be using [KaTeX](https://katex.org/)

- Create a partial under `/layouts/partials/math.html`
- Within this partial reference the [Auto-render Extension](https://katex.org/docs/autorender.html) or host these scripts locally.
- Include the partial in your templates like so:  

```bash



```

- To enable KaTex globally set the parameter `math` to `true` in a project's configuration
- To enable KaTex on a per page basis include the parameter `math: true` in content files

**Note:** Use the online reference of [Supported TeX Functions](https://katex.org/docs/supported.html)

--&gt;
&lt;!-- 




&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css&quot; integrity=&quot;sha384-zB1R0rpPzHqg7Kpt0Aljp8JPLqbXI3bhnPWROx27a9N0Ll6ZP/+DiW/UqRcLbRjq&quot; crossorigin=&quot;anonymous&quot;&gt;
&lt;script defer src=&quot;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.js&quot; integrity=&quot;sha384-y23I5Q6l+B6vatafAwxRu/0oK/79VlbSz7Q9aiSZUvyWYIYsd+qj+o24G5ZU2zJz&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;
&lt;script defer src=&quot;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/auto-render.min.js&quot; integrity=&quot;sha384-kWPLUVMOks5AQFrykwIup5lo0m3iMkkHrD0uJ4H5cjeGihAutqP0yW0J6dpFiVkI&quot; crossorigin=&quot;anonymous&quot; onload=&quot;renderMathInElement(document.body);&quot;&gt;&lt;/script&gt;



### Examples


Inline math: \\(\varphi = \dfrac{1+\sqrt5}{2}= 1.6180339887…\\)

Block math:
$$
 \varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } } 
$$

KaTeX --&gt;</content><author><name>Muhammed Bilgin</name><email>mebilgin@mebilgin.com</email></author><category term="posts" /><category term="tensor" /><summary type="html">Links about our research</summary></entry></feed>